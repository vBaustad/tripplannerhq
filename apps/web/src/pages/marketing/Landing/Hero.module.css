/* ===== Root hero ===== */
.hero {
  position: relative;
  overflow: hidden;
  min-height: 100vh;
  display: flex;
  align-items: center;
  color: var(--foreground);
  background: var(--background);
}

/* Animated pastel gradient backdrop (mimics gradient-tropical + paradise-shift) */
.hero::before {
  content: "";
  position: absolute;
  inset: 0;
  opacity: .30;
  background: linear-gradient(
    135deg,
    #ff6b9d 0%,
    #8a2be2 25%,
    #ff8c42 50%,
    #ffd23f 75%,
    #ff7f7f 100%
  );
  background-size: 300% 300%;
  animation: paradise-shift 24s ease-in-out infinite alternate;
  pointer-events: none;
}

/* Overlays */
.overlayGradient {
  position: absolute;
  inset: 0;
  /* soft glow from the top */
  background:
    radial-gradient(80% 60% at 50% 0%,
      color-mix(in oklab, var(--primary) 18%, transparent) 0%,
      transparent 70%
    );
  opacity: .20;
  pointer-events: none;
}
.overlayVignette {
  position: absolute;
  inset: 0;
  background: radial-gradient(
    120% 90% at 50% 50%,
    transparent 55%,
    rgba(var(--background-rgb), 0.70) 88%,
    rgba(var(--background-rgb), 1) 100%
  );
  pointer-events: none;
}

/* Decorative blobs (mimic your hero-decorative-*) */
.deco { position: absolute; inset: 0; overflow: hidden; pointer-events: none; }
.bubbleTopRight,
.bubbleLeftMid,
.bubbleBottomLeft,
.bubbleRightLower {
  position: absolute; border-radius: 50%; filter: blur(60px); opacity: .55;
  animation: float 10s ease-in-out infinite;
}
.bubbleTopRight  { top: -10rem; right: -10rem; width: 24rem; height: 24rem;
  background: color-mix(in oklab, var(--tertiary) 30%, transparent); }
.bubbleLeftMid   { top: 33%; left: -5rem; width: 16rem; height: 16rem;
  background: color-mix(in oklab, var(--accent-coral) 25%, transparent); animation-delay: 1.2s; }
.bubbleBottomLeft{ bottom: -10rem; left: -10rem; width: 20rem; height: 20rem;
  background: color-mix(in oklab, var(--quaternary) 25%, transparent); animation-delay: 2s; }
.bubbleRightLower{ bottom: 25%; right: -2.5rem; width: 12rem; height: 12rem;
  background: color-mix(in oklab, var(--primary) 30%, transparent); animation-delay: 3s; }

/* Content container + grid (these class names are used in your TSX) */
.container { position: relative; z-index: 10; max-width: 1200px; margin: 0 auto; padding: 5rem 1rem;}
.grid { display: grid; gap: 3rem; align-items: center;}
@media (min-width: 1024px){ .grid { grid-template-columns: 1fr 1fr; } }

.left { display: flex; flex-direction: column; gap: 2rem;}

/* Badge */
.badge {
  display: inline-flex; align-items: center; gap: .5rem;
  padding: .75rem 1.5rem; border-radius: 9999px; font-size: .875rem; font-weight: 600;
  color: #1a1a2e; background: rgba(255,255,255,.9);
  border: 1px solid color-mix(in oklab, var(--primary) 30%, transparent);
  backdrop-filter: blur(16px); width: fit-content;
}
.badge :global(svg){ width: 16px; height: 16px; color: var(--accent-coral); fill: currentColor; }

/* Title + gradient spans */
.stack > * + * { margin-top: 20px; }
.title { font-size: clamp(3rem, 6vw, 4.5rem); font-weight: 800; line-height: 1.1; margin: 0; color: var(--foreground); }
.gradientText1 {
  background: linear-gradient(to right, var(--primary), var(--secondary), var(--tertiary));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}

.gradientText2 {
  background: linear-gradient(to right, var(--tertiary), var(--quaternary), var(--accent-coral));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}
.subtitle { font-size: 1.25rem; line-height: 1.6; max-width: 32rem; color: var(--muted-foreground); }

/* CTAs */
.ctaRow { display: flex; gap: 1rem; flex-direction: column; }
@media (min-width: 640px){ .ctaRow { flex-direction: row; } }

.btnLg { font-size: 1.125rem; padding: 1.5rem 2rem; border-radius: var(--radius); }
.btnPrimary {
  border: none; color: #fff; display: inline-flex; align-items: center; gap: .5rem; font-weight: 600;
  /* mimic gradient-tropical + paradise-shift + sunset-glow, but inline */
  background: linear-gradient(135deg, #ff8c42 0%, #ff6b9d 50%, #8a2be2 100%);
  background-size: 200% 200%;
  animation: ctaShift 16s ease-in-out infinite alternate, sunset-glow 3s ease-in-out infinite;
  box-shadow: 0 25px 50px -12px rgba(0,0,0,.25);
  transition: transform .2s ease;
}
.btnPrimary:hover { transform: translateY(-2px); }
.btnSecondary {
  border: 1px solid color-mix(in oklab, var(--primary) 40%, transparent);
  background: rgba(255,255,255,.9); color: #1a1a2e; font-weight: 600;
  display: inline-flex; align-items: center; gap: .5rem; border-radius: var(--radius);
  backdrop-filter: blur(20px); transition: background .2s ease, transform .2s ease;
}
.btnSecondary:hover{ background: color-mix(in oklab, var(--primary) 20%, #ffffff 80%); transform: translateY(-2px); }

/* Stats */
.stats { display: flex; align-items: center; gap: 2rem; padding-top: 1rem; flex-wrap: wrap; }
.stat { text-align: center; }
.statLabel { font-size: .875rem; color: var(--muted-foreground); }
.statValuePrimary { color: var(--primary); font-size: 1.5rem; font-weight: 800; }
.statValueSecondary { color: var(--secondary); font-size: 1.5rem; font-weight: 800; }
.statValueTertiary { color: var(--tertiary); font-size: 1.5rem; font-weight: 800; }

/* Right column */
.right { position: relative; }
.fadeInUp { animation: fade-in-up .6s ease both; }

/* Mock phone */
.phoneImg {
  width: 100%; max-width: 28rem; margin: 0 auto; border-radius: 1.5rem;
  filter: drop-shadow(0 25px 25px rgba(0,0,0,.15));
  animation: float 8s ease-in-out infinite;
}

/* Floating cards (glass + gradient) */
.floatingCard {
  position: absolute; padding: 1rem; border-radius: .75rem;
  box-shadow: 0 25px 50px -12px rgba(0,0,0,.25);
  backdrop-filter: blur(20px);
  border: 1px solid color-mix(in oklab, var(--primary) 30%, transparent);
  background: rgba(255,255,255,.95); color: #1a1a2e;
  animation: scale-in .6s ease both;
}
.floatingCardTopLeft { top: -1rem; left: -1rem; }
.floatingCardBottomRight {
  bottom: -1rem; right: -1rem; color: #fff;
  background: linear-gradient(135deg, var(--tertiary) 0%, var(--primary) 50%, var(--secondary) 100%);
  background-size: 180% 180%;
  animation: ctaShift 18s ease-in-out infinite alternate, scale-in .6s ease both;
}

/* Dots */
.dotPrimary, .dotQuaternary { position: absolute; border-radius: 50%; box-shadow: 0 4px 6px -1px rgba(0,0,0,.1); }
.dotPrimary { top: 33%; right: -2rem; width: .75rem; height: .75rem; background-color: var(--primary); }
.dotQuaternary { bottom: 33%; left: -2rem; width: .5rem; height: .5rem; background-color: var(--quaternary); }

/* Soft transition from hero colors to white inner sections */
.bottomFade {
  position: absolute;
  left: 0; right: 0; bottom: 0;
  height: clamp(140px, 18vh, 320px);
  pointer-events: none;
  z-index: 6; /* below .container (z-index: 10), above background overlays */

  /* If your inner sections are white, fade to #fff.
     If you want to fade to the page background instead, swap #fff with var(--background). */
  background: linear-gradient(to bottom, rgba(255,255,255,0) 0%, #fff 100%);
}


/* Animations (borrowed from your globals, kept gentle) */
@keyframes float { 0%,100% { transform: translateY(0);} 50% { transform: translateY(-8px);} }
@keyframes ctaShift { 0% { background-position: 0% 50%; } 100% { background-position: 100% 50%; } }
@keyframes fade-in-up { from { opacity: 0; transform: translateY(30px); } to { opacity: 1; transform: translateY(0); } }
@keyframes scale-in { from { opacity: 0; transform: scale(.96); } to { opacity: 1; transform: scale(1); } }
@keyframes paradise-shift { 0%,100% { background-position: 0% 50%; } 50% { background-position: 100% 50%; } }

/* Motion safety */
@media (prefers-reduced-motion: reduce) {
  .hero::before,
  .overlayGradient,
  .btnPrimary,
  .floatingCardBottomRight,
  .phoneImg,
  .bubbleTopRight,
  .bubbleLeftMid,
  .bubbleBottomLeft,
  .bubbleRightLower {
    animation: none !important;
  }
}
